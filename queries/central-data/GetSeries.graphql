query GetSeries(
    $teams: [ID!]
    $gameTypes: [SeriesType!]
    $tournaments: [ID!]
    $after: Cursor
    $order: OrderDirection!
    $gte: String
    $lte: String
    $live: SeriesLiveFilter
    $livePlayerIds: [ID!]
    $private: Boolean
    $productServiceLevels: ProductServiceLevelFilter
    $titleIds: [ID!]
) {
    allSeries(
        filter: {
            teamIds: { in: $teams }
            types: $gameTypes
            tournamentIds: { in: $tournaments }
            startTimeScheduled: { gte: $gte, lte: $lte }
            live: $live
            livePlayerIds: { in: $livePlayerIds }
            private: { equals: $private }
            productServiceLevels: $productServiceLevels
            titleIds: { in: $titleIds }
        }
        orderBy: StartTimeScheduled
        orderDirection: $order
        after: $after
    ) {
        totalCount
        edges {
            node {
                id
                type
                format {
                    id
                    name
                    nameShortened
                }
                externalLinks {
                    dataProvider {
                        description
                        name
                    }
                    externalEntity {
                        id
                    }
                }
                tournament {
                    id
                    endDate
                    logoUrl
                    name
                    nameShortened
                    startDate
                    externalLinks {
                        dataProvider {
                            description
                            name
                        }
                        externalEntity {
                            id
                        }
                    }
                }
                teams {
                    baseInfo {
                        id
                        colorPrimary
                        colorSecondary
                        externalLinks {
                            dataProvider {
                                description
                                name
                            }
                            externalEntity {
                                id
                            }
                        }
                        logoUrl
                        nameShortened
                        name
                    }
                }
                startTimeScheduled
            }
        }
        pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
        }
    }
}
